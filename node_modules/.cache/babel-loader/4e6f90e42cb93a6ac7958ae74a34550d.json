{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport copy from \"copy-to-clipboard\";\nexport default function useCopyToClipboard() {\n  _s();\n\n  let resetInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const [isCopied, setCopied] = React.useState(false);\n\n  function handleCopy(text) {\n    if (typeof text === \"string\" || typeof text == \"number\") {\n      copy(text.toString());\n      setCopied(true);\n    } else {\n      setCopied(false);\n      console.error(`Cannot copy typeof ${typeof text} to clipboard, must be a string or number.`);\n    }\n  }\n\n  return [isCopied, handleCopy];\n}\n\n_s(useCopyToClipboard, \"Y/ut6AE40IU6qUSP9JIGKpPaYvY=\");","map":{"version":3,"names":["React","copy","useCopyToClipboard","resetInterval","isCopied","setCopied","useState","handleCopy","text","toString","console","error"],"sources":["C:/Users/staz/Desktop/jsx/src/App.js"],"sourcesContent":["import React from \"react\";\nimport copy from \"copy-to-clipboard\";\n\nexport default function useCopyToClipboard(resetInterval = null) {\n  const [isCopied, setCopied] = React.useState(false);\n\n  function handleCopy(text) {\n    if (typeof text === \"string\" || typeof text == \"number\") {\n      copy(text.toString());\n      setCopied(true);\n    } else {\n      setCopied(false);\n      console.error(\n        `Cannot copy typeof ${typeof text} to clipboard, must be a string or number.`\n      );\n    }\n  }\n\n  return [isCopied, handleCopy];\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,eAAe,SAASC,kBAAT,GAAkD;EAAA;;EAAA,IAAtBC,aAAsB,uEAAN,IAAM;EAC/D,MAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBL,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;;EAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;IACxB,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,IAAe,QAA/C,EAAyD;MACvDP,IAAI,CAACO,IAAI,CAACC,QAAL,EAAD,CAAJ;MACAJ,SAAS,CAAC,IAAD,CAAT;IACD,CAHD,MAGO;MACLA,SAAS,CAAC,KAAD,CAAT;MACAK,OAAO,CAACC,KAAR,CACG,sBAAqB,OAAOH,IAAK,4CADpC;IAGD;EACF;;EAED,OAAO,CAACJ,QAAD,EAAWG,UAAX,CAAP;AACD;;GAhBuBL,kB"},"metadata":{},"sourceType":"module"}
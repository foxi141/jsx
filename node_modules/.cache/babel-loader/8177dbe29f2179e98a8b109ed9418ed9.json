{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useInput = initialValue => {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n  const [calc, setCalc] = useState('');\n\n  let count = e => {\n    if (value > 35000) {\n      let calc = (value * 0, 14);\n      setCalc(calc.toFixed);\n    }\n  };\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: event => {\n        setValue(event.target.value);\n      }\n    }\n  };\n};\n\n_s(useInput, \"q37lK/dNRuI1eB/+1h4E2XOrUxI=\");","map":{"version":3,"names":["useState","useInput","initialValue","value","setValue","calc","setCalc","count","e","toFixed","reset","bind","onChange","event","target"],"sources":["C:/Users/staz/Desktop/jsx/src/logic.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [calc, setCalc]=useState('')\r\nlet count =(e)=>{\r\nif(value>35000){\r\nlet calc=(value * 0,14)\r\nsetCalc(calc.toFixed)\r\n}\r\n}\r\n\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,YAAY,IAAI;EAAA;;EACtC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;;EACF,IAAIO,KAAK,GAAGC,CAAD,IAAK;IAChB,IAAGL,KAAK,GAAC,KAAT,EAAe;MACf,IAAIE,IAAI,IAAEF,KAAK,GAAG,CAAR,EAAU,EAAZ,CAAR;MACAG,OAAO,CAACD,IAAI,CAACI,OAAN,CAAP;IACC;EACA,CALD;;EAQE,OAAO;IACLN,KADK;IAELC,QAFK;IAGLM,KAAK,EAAE,MAAMN,QAAQ,CAAC,EAAD,CAHhB;IAILO,IAAI,EAAE;MACJR,KADI;MAEJS,QAAQ,EAAEC,KAAK,IAAI;QACjBT,QAAQ,CAACS,KAAK,CAACC,MAAN,CAAaX,KAAd,CAAR;MACD;IAJG;EAJD,CAAP;AAWD,CAtBM;;GAAMF,Q"},"metadata":{},"sourceType":"module"}